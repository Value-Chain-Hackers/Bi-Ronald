---
title: "Supply Chain Resilience Dashboard"
format:
  dashboard:
    theme: 
      - litera
      - custom.scss
---

# Plotting with Plotly

```{python}
#| echo: false
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from itables import show

# Load Excel
raw = pd.read_excel("./data/Resilience - MasterDatabase.xlsx", sheet_name="MasterData", header=None)
raw.columns = raw.iloc[1]
data = raw.drop([0, 1]).reset_index(drop=True)

# Clean & rename columns
data = data.rename(columns={
    "Overall SCRes": "resilience_score",
    "Size (number of employees)": "company_size",
    "Function:": "function",
    "Company name:": "company"
})

# Convert values
data["resilience_score"] = pd.to_numeric(data["resilience_score"], errors="coerce")

# Create result classification
data["Result"] = data["resilience_score"].apply(lambda x: "High Resilience" if x and x >= 3.5 else "Low Resilience")

# Drop NAs for plotting
plot_data = data.dropna(subset=["resilience_score", "company_size"])
```

## Row {height=100%}

::: {.card title="Resilience by Company Size" width=100%}

```{python}
fig1 = px.box(
    plot_data,
    x="company_size",
    y="resilience_score",
    color="Result",
    title="Resilience Score by Company Size",
    labels={"company_size": "Company Size", "resilience_score": "Resilience Score"},
    color_discrete_sequence=px.colors.qualitative.Bold
)
fig1.show()
```

:::

# Underlying Data

::: {.card }

```{python}
show(plot_data[["company", "function", "company_size", "resilience_score", "Result"]],
     lengthMenu=[10, 20, 50])
```

:::
