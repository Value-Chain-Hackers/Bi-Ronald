# Embedding visualisations in a generic webpage

Ofcourse we can just embed visualisations

```{python}
#| echo: false
import numpy as np
import pandas as pd
import plotly.express as px
from itables import show

# Load and prepare Excel data
df = pd.read_excel("./data/Resilience - MasterDatabase.xlsx", sheet_name="MasterData", header=None)
df.columns = df.iloc[1]
df = df.drop([0, 1]).reset_index(drop=True)

# Rename and clean columns
df = df.rename(columns={
    "Overall SCRes": "resilience_score",
    "Size (number of employees)": "company_size"
})
df["resilience_score"] = pd.to_numeric(df["resilience_score"], errors="coerce")
df = df.dropna(subset=["resilience_score", "company_size"])
df["Result"] = df["resilience_score"].apply(lambda x: "Pass" if x >= 3.5 else "Fail")

display_data = df[["company_size", "resilience_score", "Result"]]
```

## Source data

This data is from the Value Chain Hackers supply chain resilience survey conducted across multiple organizations in Europe. It reflects reported values of company size and calculated resilience scores.

## Embedded html figures

:::{.column-body-outset}
![This is an embedded html figure built with Bokeh](figs/three_panel_plot.html){width=1000 height=500}
:::

## Using libraries to create figures embedded in the document

::: {.panel-tabset}

## Plot

```{python}
#| echo: false
fig = px.box(
    display_data,
    x="company_size",
    y="resilience_score",
    color="Result",
    title="Resilience Score by Company Size",
    labels={
        "company_size": "Company Size",
        "resilience_score": "Resilience Score",
        "Result": "Threshold Classification"
    },
    color_discrete_sequence=px.colors.qualitative.Set2
).update_layout(
    template="plotly_white"
)

fig.show()
```

## Data

```{python}
#| echo: false
show(display_data, lengthMenu=[10, 20, 50])
```

:::

### Pros and Cons

This might not have the usual look of organised cards as you have come to expect from a dashboard, but can give a very clean and professional appearance to your data story relatively quickly. Certain features are only available through the dashboard layout option, such as the value cards in [Example Dash 2: Data breakdown](dash02.qmd#data-breakdown)

You might need to do some experimentation to discover what layout best suits your data and the message you are trying to convey.

* Do you expect users to mainly visit the site via computer or mobile phone?
* How much interactivity do you require vs. how much text content do you anticipate?
* What format are your figures in, and are they better showcased by either layout?
* Which layout allows you to follow better accessibility practice?
